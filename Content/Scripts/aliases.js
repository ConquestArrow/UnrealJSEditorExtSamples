UObject.prototype.ToText = UObject.prototype.Conv_ObjectToText;
UObject.prototype.ToString = UObject.prototype.Conv_ObjectToString;
UObject.prototype.Equal = UObject.prototype.EqualEqual_ObjectObject;
UObject.prototype.NotEqual = UObject.prototype.NotEqual_ObjectObject;
UObject.prototype.GetClass = UObject.prototype.GetObjectClass;
UObject.prototype.ClearTimerbyFunctionName = UObject.prototype.K2_ClearTimer;
UObject.prototype.GetTimerElapsedTimebyFunctionName = UObject.prototype.K2_GetTimerElapsedTime;
UObject.prototype.GetTimerRemainingTimebyFunctionName = UObject.prototype.K2_GetTimerRemainingTime;
UObject.prototype.IsTimerActivebyFunctionName = UObject.prototype.K2_IsTimerActive;
UObject.prototype.IsTimerPausedbyFunctionName = UObject.prototype.K2_IsTimerPaused;
UObject.prototype.PauseTimerbyFunctionName = UObject.prototype.K2_PauseTimer;
UObject.prototype.SetTimerbyFunctionName = UObject.prototype.K2_SetTimer;
UObject.prototype.DoesTimerExistbyFunctionName = UObject.prototype.K2_TimerExists;
UObject.prototype.UnpauseTimerbyFunctionName = UObject.prototype.K2_UnPauseTimer;
Class.prototype.Equal = Class.prototype.EqualEqual_ClassClass;
Class.prototype.NotEqual = Class.prototype.NotEqual_ClassClass;
Class.prototype.GetDisplayName = Class.prototype.GetClassDisplayName;
Actor.prototype.ConstructionScript = Actor.prototype.UserConstructionScript;
Actor.prototype.SnapActorTo = Actor.prototype.SnapRootComponentTo;
Actor.prototype.Tick = Actor.prototype.ReceiveTick;
Actor.prototype.RadialDamage = Actor.prototype.ReceiveRadialDamage;
Actor.prototype.PointDamage = Actor.prototype.ReceivePointDamage;
Actor.prototype.Hit = Actor.prototype.ReceiveHit;
Actor.prototype.EndPlay = Actor.prototype.ReceiveEndPlay;
Actor.prototype.Destroyed = Actor.prototype.ReceiveDestroyed;
Actor.prototype.BeginPlay = Actor.prototype.ReceiveBeginPlay;
Actor.prototype.AnyDamage = Actor.prototype.ReceiveAnyDamage;
Actor.prototype.ActorOnReleased = Actor.prototype.ReceiveActorOnReleased;
Actor.prototype.TouchLeave = Actor.prototype.ReceiveActorOnInputTouchLeave;
Actor.prototype.TouchEnter = Actor.prototype.ReceiveActorOnInputTouchEnter;
Actor.prototype.EndInputTouch = Actor.prototype.ReceiveActorOnInputTouchEnd;
Actor.prototype.BeginInputTouch = Actor.prototype.ReceiveActorOnInputTouchBegin;
Actor.prototype.ActorOnClicked = Actor.prototype.ReceiveActorOnClicked;
Actor.prototype.ActorEndOverlap = Actor.prototype.ReceiveActorEndOverlap;
Actor.prototype.ActorEndCursorOver = Actor.prototype.ReceiveActorEndCursorOver;
Actor.prototype.ActorBeginOverlap = Actor.prototype.ReceiveActorBeginOverlap;
Actor.prototype.ActorBeginCursorOver = Actor.prototype.ReceiveActorBeginCursorOver;
Actor.prototype.Teleport = Actor.prototype.K2_TeleportTo;
Actor.prototype.SetActorTransform = Actor.prototype.K2_SetActorTransform;
Actor.prototype.SetActorRotation = Actor.prototype.K2_SetActorRotation;
Actor.prototype.SetActorRelativeTransform = Actor.prototype.K2_SetActorRelativeTransform;
Actor.prototype.SetActorRelativeRotation = Actor.prototype.K2_SetActorRelativeRotation;
Actor.prototype.SetActorRelativeLocation = Actor.prototype.K2_SetActorRelativeLocation;
Actor.prototype.SetActorLocationAndRotation = Actor.prototype.K2_SetActorLocationAndRotation;
Actor.prototype.SetActorLocation = Actor.prototype.K2_SetActorLocation;
Actor.prototype.OnReset = Actor.prototype.K2_OnReset;
Actor.prototype.OnEndViewTarget = Actor.prototype.K2_OnEndViewTarget;
Actor.prototype.OnBecomeViewTarget = Actor.prototype.K2_OnBecomeViewTarget;
Actor.prototype.GetRootComponent = Actor.prototype.K2_GetRootComponent;
Actor.prototype.GetActorRotation = Actor.prototype.K2_GetActorRotation;
Actor.prototype.GetActorLocation = Actor.prototype.K2_GetActorLocation;
Actor.prototype.DetachFromActor = Actor.prototype.K2_DetachFromActor;
Actor.prototype.DestroyComponent = Actor.prototype.K2_DestroyComponent;
Actor.prototype.DestroyActor = Actor.prototype.K2_DestroyActor;
Actor.prototype.AttachToComponent = Actor.prototype.K2_AttachToComponent;
Actor.prototype.AttachToActor = Actor.prototype.K2_AttachToActor;
Actor.prototype.AttachActorToActor = Actor.prototype.K2_AttachRootComponentToActor;
Actor.prototype.AttachActorToComponent = Actor.prototype.K2_AttachRootComponentTo;
Actor.prototype.AddActorWorldTransform = Actor.prototype.K2_AddActorWorldTransform;
Actor.prototype.AddActorWorldRotation = Actor.prototype.K2_AddActorWorldRotation;
Actor.prototype.AddActorWorldOffset = Actor.prototype.K2_AddActorWorldOffset;
Actor.prototype.AddActorLocalTransform = Actor.prototype.K2_AddActorLocalTransform;
Actor.prototype.AddActorLocalRotation = Actor.prototype.K2_AddActorLocalRotation;
Actor.prototype.AddActorLocalOffset = Actor.prototype.K2_AddActorLocalOffset;
Actor.prototype.GetActorTransform = Actor.prototype.GetTransform;
Actor.prototype.DetachActorFromActor = Actor.prototype.DetachRootComponentFromParent;
ActorComponent.prototype.Tick = ActorComponent.prototype.ReceiveTick;
ActorComponent.prototype.EndPlay = ActorComponent.prototype.ReceiveEndPlay;
ActorComponent.prototype.BeginPlay = ActorComponent.prototype.ReceiveBeginPlay;
ActorComponent.prototype.DestroyComponent = ActorComponent.prototype.K2_DestroyComponent;
ActorComponent.prototype.IsComponentBeingDestroyed = ActorComponent.prototype.IsBeingDestroyed;
SceneComponent.prototype.SetWorldTransform = SceneComponent.prototype.K2_SetWorldTransform;
SceneComponent.prototype.SetWorldRotation = SceneComponent.prototype.K2_SetWorldRotation;
SceneComponent.prototype.SetWorldLocationAndRotation = SceneComponent.prototype.K2_SetWorldLocationAndRotation;
SceneComponent.prototype.SetWorldLocation = SceneComponent.prototype.K2_SetWorldLocation;
SceneComponent.prototype.SetRelativeTransform = SceneComponent.prototype.K2_SetRelativeTransform;
SceneComponent.prototype.SetRelativeRotation = SceneComponent.prototype.K2_SetRelativeRotation;
SceneComponent.prototype.SetRelativeLocationAndRotation = SceneComponent.prototype.K2_SetRelativeLocationAndRotation;
SceneComponent.prototype.SetRelativeLocation = SceneComponent.prototype.K2_SetRelativeLocation;
SceneComponent.prototype.GetWorldTransform = SceneComponent.prototype.K2_GetComponentToWorld;
SceneComponent.prototype.GetWorldScale = SceneComponent.prototype.K2_GetComponentScale;
SceneComponent.prototype.GetWorldRotation = SceneComponent.prototype.K2_GetComponentRotation;
SceneComponent.prototype.GetWorldLocation = SceneComponent.prototype.K2_GetComponentLocation;
SceneComponent.prototype.DetachFromComponent = SceneComponent.prototype.K2_DetachFromComponent;
SceneComponent.prototype.AttachToComponent = SceneComponent.prototype.K2_AttachToComponent;
SceneComponent.prototype.AttachTo = SceneComponent.prototype.K2_AttachTo;
SceneComponent.prototype.AddWorldTransform = SceneComponent.prototype.K2_AddWorldTransform;
SceneComponent.prototype.AddWorldRotation = SceneComponent.prototype.K2_AddWorldRotation;
SceneComponent.prototype.AddWorldOffset = SceneComponent.prototype.K2_AddWorldOffset;
SceneComponent.prototype.AddRelativeRotation = SceneComponent.prototype.K2_AddRelativeRotation;
SceneComponent.prototype.AddRelativeLocation = SceneComponent.prototype.K2_AddRelativeLocation;
SceneComponent.prototype.AddLocalTransform = SceneComponent.prototype.K2_AddLocalTransform;
SceneComponent.prototype.AddLocalRotation = SceneComponent.prototype.K2_AddLocalRotation;
SceneComponent.prototype.AddLocalOffset = SceneComponent.prototype.K2_AddLocalOffset;
PrimitiveComponent.prototype.ComponentOverlapActors = PrimitiveComponent.prototype.ComponentOverlapActors_NEW;
PrimitiveComponent.prototype.ComponentOverlapComponents = PrimitiveComponent.prototype.ComponentOverlapComponents_NEW;
PrimitiveComponent.prototype.SetPhysicalMaterialOverride = PrimitiveComponent.prototype.SetPhysMaterialOverride;
PrimitiveComponent.prototype.SetMaxDrawDistance = PrimitiveComponent.prototype.SetCullDistance;
PrimitiveComponent.prototype.LineTraceComponent = PrimitiveComponent.prototype.K2_LineTraceComponent;
PrimitiveComponent.prototype.IsQueryCollisionEnabled = PrimitiveComponent.prototype.K2_IsQueryCollisionEnabled;
PrimitiveComponent.prototype.IsPhysicsCollisionEnabled = PrimitiveComponent.prototype.K2_IsPhysicsCollisionEnabled;
PrimitiveComponent.prototype.IsCollisionEnabled = PrimitiveComponent.prototype.K2_IsCollisionEnabled;
PrimitiveComponent.prototype.CreateMIDForElementFromMaterial = PrimitiveComponent.prototype.CreateAndSetMaterialInstanceDynamicFromMaterial;
PrimitiveComponent.prototype.CreateMIDForElement = PrimitiveComponent.prototype.CreateAndSetMaterialInstanceDynamic;
PrimitiveComponent.prototype.GetMoveIgnoreActors = PrimitiveComponent.prototype.CopyArrayOfMoveIgnoreActors;
HUD.prototype.HitBoxReleased = HUD.prototype.ReceiveHitBoxRelease;
HUD.prototype.HitBoxEndCursorOver = HUD.prototype.ReceiveHitBoxEndCursorOver;
HUD.prototype.HitBoxClicked = HUD.prototype.ReceiveHitBoxClick;
HUD.prototype.HitBoxBeginCursorOver = HUD.prototype.ReceiveHitBoxBeginCursorOver;
PawnActionsComponent.prototype.PushAction = PawnActionsComponent.prototype.K2_PushAction;
PawnActionsComponent.prototype.PerformAction = PawnActionsComponent.prototype.K2_PerformAction;
PawnActionsComponent.PerformAction = PawnActionsComponent.K2_PerformAction;
PawnActionsComponent.prototype.ForceAbortAction = PawnActionsComponent.prototype.K2_ForceAbortAction;
PawnActionsComponent.prototype.AbortAction = PawnActionsComponent.prototype.K2_AbortAction;
Controller.prototype.GetControlledPawn = Controller.prototype.K2_GetPawn;
AIController.prototype.SetFocus = AIController.prototype.K2_SetFocus;
AIController.prototype.SetFocalPoint = AIController.prototype.K2_SetFocalPoint;
AIController.prototype.ClearFocus = AIController.prototype.K2_ClearFocus;
AISense_Blueprint.prototype.OnNewPawn = AISense_Blueprint.prototype.K2_OnNewPawn;
AITask_MoveTo.prototype.MoveToLocationorActor = AITask_MoveTo.prototype.AIMoveTo;
AITask_MoveTo.MoveToLocationorActor = AITask_MoveTo.AIMoveTo;
Pawn.prototype.Unpossessed = Pawn.prototype.ReceiveUnpossessed;
Pawn.prototype.Possessed = Pawn.prototype.ReceivePossessed;
Pawn.prototype.GetMovementInputVector = Pawn.prototype.K2_GetMovementInputVector;
Character.prototype.UpdateCustomMovement = Character.prototype.K2_UpdateCustomMovement;
Character.prototype.OnStartCrouch = Character.prototype.K2_OnStartCrouch;
Character.prototype.OnMovementModeChanged = Character.prototype.K2_OnMovementModeChanged;
Character.prototype.OnEndCrouch = Character.prototype.K2_OnEndCrouch;
Character.prototype.CanJump = Character.prototype.CanJumpInternal;
AnimInstance.prototype.GetTransitionTimeElapsed = AnimInstance.prototype.GetInstanceTransitionTimeElapsedFraction;
AnimInstance.prototype.GetTransitionTimeElapsed = AnimInstance.prototype.GetInstanceTransitionTimeElapsed;
AnimInstance.prototype.GetTransitionCrossfadeDuration = AnimInstance.prototype.GetInstanceTransitionCrossfadeDuration;
AnimInstance.prototype.StateWeight = AnimInstance.prototype.GetInstanceStateWeight;
AnimInstance.prototype.MachineWeight = AnimInstance.prototype.GetInstanceMachineWeight;
AnimInstance.prototype.CurrentStateTime = AnimInstance.prototype.GetInstanceCurrentStateElapsedTime;
AnimInstance.prototype.TimeRemaining = AnimInstance.prototype.GetInstanceAssetPlayerTimeFromEndFraction;
AnimInstance.prototype.TimeRemaining = AnimInstance.prototype.GetInstanceAssetPlayerTimeFromEnd;
AnimInstance.prototype.CurrentTime = AnimInstance.prototype.GetInstanceAssetPlayerTimeFraction;
AnimInstance.prototype.CurrentTime = AnimInstance.prototype.GetInstanceAssetPlayerTime;
AnimInstance.prototype.Length = AnimInstance.prototype.GetInstanceAssetPlayerLength;
Widget.prototype.HasAnyUserFocusedDescendants = Widget.prototype.HasFocusedDescendants;
WidgetBlueprintLibrary.prototype.SetInputModeUIOnly = WidgetBlueprintLibrary.prototype.SetInputMode_UIOnlyEx;
WidgetBlueprintLibrary.SetInputModeUIOnly = WidgetBlueprintLibrary.SetInputMode_UIOnlyEx;
WidgetBlueprintLibrary.prototype.SetInputModeUIOnly = WidgetBlueprintLibrary.prototype.SetInputMode_UIOnly;
WidgetBlueprintLibrary.SetInputModeUIOnly = WidgetBlueprintLibrary.SetInputMode_UIOnly;
WidgetBlueprintLibrary.prototype.SetInputModeGameAndUI = WidgetBlueprintLibrary.prototype.SetInputMode_GameAndUIEx;
WidgetBlueprintLibrary.SetInputModeGameAndUI = WidgetBlueprintLibrary.SetInputMode_GameAndUIEx;
WidgetBlueprintLibrary.prototype.SetInputModeGameAndUI = WidgetBlueprintLibrary.prototype.SetInputMode_GameAndUI;
WidgetBlueprintLibrary.SetInputModeGameAndUI = WidgetBlueprintLibrary.SetInputMode_GameAndUI;
WidgetBlueprintLibrary.prototype.DrawText = WidgetBlueprintLibrary.prototype.DrawTextFormatted;
WidgetBlueprintLibrary.DrawText = WidgetBlueprintLibrary.DrawTextFormatted;
WidgetBlueprintLibrary.prototype.DrawString = WidgetBlueprintLibrary.prototype.DrawText;
WidgetBlueprintLibrary.DrawString = WidgetBlueprintLibrary.DrawText;
WidgetBlueprintLibrary.prototype.CreateWidget = WidgetBlueprintLibrary.prototype.Create;
WidgetBlueprintLibrary.CreateWidget = WidgetBlueprintLibrary.Create;
SkinnedMeshComponent.prototype.FindClosestBone = SkinnedMeshComponent.prototype.FindClosestBone_K2;
SkeletalMeshComponent.prototype.GetClosestPointOnPhysicsAsset = SkeletalMeshComponent.prototype.K2_GetClosestPointOnPhysicsAsset;
PlayerController.prototype.SetInputModeGameAndUI = PlayerController.prototype.SetInputMode_GameAndUI;
PlayerController.prototype.SetInputModeGameAndUI = PlayerController.prototype.SetInputMode_GameAndUIEx;
PlayerController.prototype.SetInputModeUIOnly = PlayerController.prototype.SetInputMode_UIOnly;
PlayerController.prototype.SetInputModeUIOnly = PlayerController.prototype.SetInputMode_UIOnlyEx;
PlayerController.prototype.ConvertWorldLocationToScreenLocation = PlayerController.prototype.ProjectWorldLocationToScreen;
PlayerController.prototype.ConvertScreenLocationToWorldSpace = PlayerController.prototype.DeprojectScreenPositionToWorld;
PlayerController.prototype.ConvertMouseLocationToWorldSpace = PlayerController.prototype.DeprojectMousePositionToWorld;
DebugCameraController.prototype.OnDeactivate = DebugCameraController.prototype.ReceiveOnDeactivate;
DebugCameraController.prototype.OnActorSelected = DebugCameraController.prototype.ReceiveOnActorSelected;
DebugCameraController.prototype.OnActivate = DebugCameraController.prototype.ReceiveOnActivate;
GameMode.prototype.OnPostLogin = GameMode.prototype.K2_PostLogin;
GameMode.prototype.OnSwapPlayerControllers = GameMode.prototype.K2_OnSwapPlayerControllers;
GameMode.prototype.OnSetMatchState = GameMode.prototype.K2_OnSetMatchState;
GameMode.prototype.OnRestartPlayer = GameMode.prototype.K2_OnRestartPlayer;
GameMode.prototype.OnLogout = GameMode.prototype.K2_OnLogout;
GameMode.prototype.OnChangeName = GameMode.prototype.K2_OnChangeName;
GameMode.prototype.FindPlayerStart = GameMode.prototype.K2_FindPlayerStart;
PlayerState.prototype.OverrideWith = PlayerState.prototype.ReceiveOverrideWith;
PlayerState.prototype.CopyProperties = PlayerState.prototype.ReceiveCopyProperties;
MovementComponent.prototype.MoveUpdatedComponent = MovementComponent.prototype.K2_MoveUpdatedComponent;
MovementComponent.prototype.GetModifiedMaxSpeed = MovementComponent.prototype.K2_GetModifiedMaxSpeed;
MovementComponent.prototype.GetMaxSpeedModifier = MovementComponent.prototype.K2_GetMaxSpeedModifier;
World.prototype.LogBoxShape = World.prototype.LogBox;
World.prototype.SuggestProjectileVelocity = World.prototype.BlueprintSuggestProjectileVelocity;
World.prototype.SuggestProjectileVelocityCustomArc = World.prototype.SuggestProjectileVelocity_CustomArc;
World.prototype.BoxOverlapActors = World.prototype.BoxOverlapActors_NEW;
World.prototype.BoxOverlapComponents = World.prototype.BoxOverlapComponents_NEW;
World.prototype.MultiBoxTraceByChannel = World.prototype.BoxTraceMulti;
World.prototype.MultiBoxTraceForObjects = World.prototype.BoxTraceMultiForObjects;
World.prototype.BoxTraceByChannel = World.prototype.BoxTraceSingle;
World.prototype.BoxTraceForObjects = World.prototype.BoxTraceSingleForObjects;
World.prototype.CapsuleOverlapActors = World.prototype.CapsuleOverlapActors_NEW;
World.prototype.CapsuleOverlapComponents = World.prototype.CapsuleOverlapComponents_NEW;
World.prototype.MultiCapsuleTraceByChannelDeprecated = World.prototype.CapsuleTraceMulti_DEPRECATED;
World.prototype.MultiCapsuleTraceByChannel = World.prototype.CapsuleTraceMulti_NEW;
World.prototype.MultiCapsuleTraceByObjectDeprecated = World.prototype.CapsuleTraceMultiByObject_DEPRECATED;
World.prototype.MultiCapsuleTraceForObjects = World.prototype.CapsuleTraceMultiForObjects;
World.prototype.SingleCapsuleTraceByChannelDeprecated = World.prototype.CapsuleTraceSingle_DEPRECATED;
World.prototype.CapsuleTraceByChannel = World.prototype.CapsuleTraceSingle_NEW;
World.prototype.SingleCapsuleTraceByObjectDeprecated = World.prototype.CapsuleTraceSingleByObject_DEPRECATED;
World.prototype.CapsuleTraceForObjects = World.prototype.CapsuleTraceSingleForObjects;
World.prototype.DrawDebugCone = World.prototype.DrawDebugConeInDegrees;
World.prototype.ClearandInvalidateTimerbyHandle = World.prototype.K2_ClearAndInvalidateTimerHandle;
World.prototype.ClearTimerbyHandle = World.prototype.K2_ClearTimerHandle;
World.prototype.GetTimerElapsedTimebyHandle = World.prototype.K2_GetTimerElapsedTimeHandle;
World.prototype.GetTimerRemainingTimebyHandle = World.prototype.K2_GetTimerRemainingTimeHandle;
World.prototype.IsTimerActivebyHandle = World.prototype.K2_IsTimerActiveHandle;
World.prototype.IsTimerPausedbyHandle = World.prototype.K2_IsTimerPausedHandle;
World.prototype.PauseTimerbyHandle = World.prototype.K2_PauseTimerHandle;
World.prototype.DoesTimerExistbyHandle = World.prototype.K2_TimerExistsHandle;
World.prototype.UnpauseTimerbyHandle = World.prototype.K2_UnPauseTimerHandle;
World.prototype.MultiLineTraceByChannelDeprecated = World.prototype.LineTraceMulti_DEPRECATED;
World.prototype.MultiLineTraceByChannel = World.prototype.LineTraceMulti_NEW;
World.prototype.MultiLineTraceByObjectDeprecated = World.prototype.LineTraceMultiByObject_DEPRECATED;
World.prototype.MultiLineTraceForObjects = World.prototype.LineTraceMultiForObjects;
World.prototype.SingleLineTraceByChannelDeprecated = World.prototype.LineTraceSingle_DEPRECATED;
World.prototype.LineTraceByChannel = World.prototype.LineTraceSingle_NEW;
World.prototype.SingleLineTraceByObjectDeprecated = World.prototype.LineTraceSingleByObject_DEPRECATED;
World.prototype.LineTraceForObjects = World.prototype.LineTraceSingleForObjects;
World.prototype.SphereOverlapActors = World.prototype.SphereOverlapActors_NEW;
World.prototype.SphereOverlapComponents = World.prototype.SphereOverlapComponents_NEW;
World.prototype.MultiSphereTraceByChannelDeprecated = World.prototype.SphereTraceMulti_DEPRECATED;
World.prototype.MultiSphereTraceByChannel = World.prototype.SphereTraceMulti_NEW;
World.prototype.MultiSphereTraceByObjectDeprecated = World.prototype.SphereTraceMultiByObject_DEPRECATED;
World.prototype.MultiSphereTraceForObjects = World.prototype.SphereTraceMultiForObjects;
World.prototype.SingleSphereTraceByChannelDeprecated = World.prototype.SphereTraceSingle_DEPRECATED;
World.prototype.SphereTraceByChannel = World.prototype.SphereTraceSingle_NEW;
World.prototype.SingleSphereTraceByObjectDeprecated = World.prototype.SphereTraceSingleByObject_DEPRECATED;
World.prototype.SphereTraceForObjects = World.prototype.SphereTraceSingleForObjects;
World.prototype.CreateWidget = World.prototype.Create;
PawnMovementComponent.prototype.GetInputVector = PawnMovementComponent.prototype.K2_GetInputVector;
CharacterMovementComponent.prototype.GetWalkableFloorZ = CharacterMovementComponent.prototype.K2_GetWalkableFloorZ;
CharacterMovementComponent.prototype.GetWalkableFloorAngle = CharacterMovementComponent.prototype.K2_GetWalkableFloorAngle;
CharacterMovementComponent.prototype.GetModifiedMaxAcceleration = CharacterMovementComponent.prototype.K2_GetModifiedMaxAcceleration;
AudioComponent.prototype.SetIntegerParameter = AudioComponent.prototype.SetIntParameter;
AudioComponent.prototype.SetBooleanParameter = AudioComponent.prototype.SetBoolParameter;
AudioComponent.prototype.GetAttenuationSettingsToApply = AudioComponent.prototype.BP_GetAttenuationSettingsToApply;
ArrowComponent.prototype.SetArrowColor = ArrowComponent.prototype.SetArrowColor_New;
TextRenderComponent.prototype.SetText = TextRenderComponent.prototype.K2_SetText;
GameInstance.prototype.Shutdown = GameInstance.prototype.ReceiveShutdown;
GameInstance.prototype.Init = GameInstance.prototype.ReceiveInit;
GameInstance.prototype.TravelError = GameInstance.prototype.HandleTravelError;
GameInstance.prototype.NetworkError = GameInstance.prototype.HandleNetworkError;
KismetSystemLibrary.prototype.SphereTraceForObjects = KismetSystemLibrary.prototype.SphereTraceSingleForObjects;
KismetSystemLibrary.SphereTraceForObjects = KismetSystemLibrary.SphereTraceSingleForObjects;
KismetSystemLibrary.prototype.SingleSphereTraceByObjectDeprecated = KismetSystemLibrary.prototype.SphereTraceSingleByObject_DEPRECATED;
KismetSystemLibrary.SingleSphereTraceByObjectDeprecated = KismetSystemLibrary.SphereTraceSingleByObject_DEPRECATED;
KismetSystemLibrary.prototype.SphereTraceByChannel = KismetSystemLibrary.prototype.SphereTraceSingle_NEW;
KismetSystemLibrary.SphereTraceByChannel = KismetSystemLibrary.SphereTraceSingle_NEW;
KismetSystemLibrary.prototype.SingleSphereTraceByChannelDeprecated = KismetSystemLibrary.prototype.SphereTraceSingle_DEPRECATED;
KismetSystemLibrary.SingleSphereTraceByChannelDeprecated = KismetSystemLibrary.SphereTraceSingle_DEPRECATED;
KismetSystemLibrary.prototype.MultiSphereTraceForObjects = KismetSystemLibrary.prototype.SphereTraceMultiForObjects;
KismetSystemLibrary.MultiSphereTraceForObjects = KismetSystemLibrary.SphereTraceMultiForObjects;
KismetSystemLibrary.prototype.MultiSphereTraceByObjectDeprecated = KismetSystemLibrary.prototype.SphereTraceMultiByObject_DEPRECATED;
KismetSystemLibrary.MultiSphereTraceByObjectDeprecated = KismetSystemLibrary.SphereTraceMultiByObject_DEPRECATED;
KismetSystemLibrary.prototype.MultiSphereTraceByChannel = KismetSystemLibrary.prototype.SphereTraceMulti_NEW;
KismetSystemLibrary.MultiSphereTraceByChannel = KismetSystemLibrary.SphereTraceMulti_NEW;
KismetSystemLibrary.prototype.MultiSphereTraceByChannelDeprecated = KismetSystemLibrary.prototype.SphereTraceMulti_DEPRECATED;
KismetSystemLibrary.MultiSphereTraceByChannelDeprecated = KismetSystemLibrary.SphereTraceMulti_DEPRECATED;
KismetSystemLibrary.prototype.SphereOverlapComponents = KismetSystemLibrary.prototype.SphereOverlapComponents_NEW;
KismetSystemLibrary.SphereOverlapComponents = KismetSystemLibrary.SphereOverlapComponents_NEW;
KismetSystemLibrary.prototype.SphereOverlapActors = KismetSystemLibrary.prototype.SphereOverlapActors_NEW;
KismetSystemLibrary.SphereOverlapActors = KismetSystemLibrary.SphereOverlapActors_NEW;
KismetSystemLibrary.prototype.LineTraceForObjects = KismetSystemLibrary.prototype.LineTraceSingleForObjects;
KismetSystemLibrary.LineTraceForObjects = KismetSystemLibrary.LineTraceSingleForObjects;
KismetSystemLibrary.prototype.SingleLineTraceByObjectDeprecated = KismetSystemLibrary.prototype.LineTraceSingleByObject_DEPRECATED;
KismetSystemLibrary.SingleLineTraceByObjectDeprecated = KismetSystemLibrary.LineTraceSingleByObject_DEPRECATED;
KismetSystemLibrary.prototype.LineTraceByChannel = KismetSystemLibrary.prototype.LineTraceSingle_NEW;
KismetSystemLibrary.LineTraceByChannel = KismetSystemLibrary.LineTraceSingle_NEW;
KismetSystemLibrary.prototype.SingleLineTraceByChannelDeprecated = KismetSystemLibrary.prototype.LineTraceSingle_DEPRECATED;
KismetSystemLibrary.SingleLineTraceByChannelDeprecated = KismetSystemLibrary.LineTraceSingle_DEPRECATED;
KismetSystemLibrary.prototype.MultiLineTraceForObjects = KismetSystemLibrary.prototype.LineTraceMultiForObjects;
KismetSystemLibrary.MultiLineTraceForObjects = KismetSystemLibrary.LineTraceMultiForObjects;
KismetSystemLibrary.prototype.MultiLineTraceByObjectDeprecated = KismetSystemLibrary.prototype.LineTraceMultiByObject_DEPRECATED;
KismetSystemLibrary.MultiLineTraceByObjectDeprecated = KismetSystemLibrary.LineTraceMultiByObject_DEPRECATED;
KismetSystemLibrary.prototype.MultiLineTraceByChannel = KismetSystemLibrary.prototype.LineTraceMulti_NEW;
KismetSystemLibrary.MultiLineTraceByChannel = KismetSystemLibrary.LineTraceMulti_NEW;
KismetSystemLibrary.prototype.MultiLineTraceByChannelDeprecated = KismetSystemLibrary.prototype.LineTraceMulti_DEPRECATED;
KismetSystemLibrary.MultiLineTraceByChannelDeprecated = KismetSystemLibrary.LineTraceMulti_DEPRECATED;
KismetSystemLibrary.prototype.UnpauseTimerbyHandle = KismetSystemLibrary.prototype.K2_UnPauseTimerHandle;
KismetSystemLibrary.UnpauseTimerbyHandle = KismetSystemLibrary.K2_UnPauseTimerHandle;
KismetSystemLibrary.prototype.UnpauseTimerbyFunctionName = KismetSystemLibrary.prototype.K2_UnPauseTimer;
KismetSystemLibrary.UnpauseTimerbyFunctionName = KismetSystemLibrary.K2_UnPauseTimer;
KismetSystemLibrary.prototype.DoesTimerExistbyHandle = KismetSystemLibrary.prototype.K2_TimerExistsHandle;
KismetSystemLibrary.DoesTimerExistbyHandle = KismetSystemLibrary.K2_TimerExistsHandle;
KismetSystemLibrary.prototype.DoesTimerExistbyFunctionName = KismetSystemLibrary.prototype.K2_TimerExists;
KismetSystemLibrary.DoesTimerExistbyFunctionName = KismetSystemLibrary.K2_TimerExists;
KismetSystemLibrary.prototype.SetTimerbyFunctionName = KismetSystemLibrary.prototype.K2_SetTimer;
KismetSystemLibrary.SetTimerbyFunctionName = KismetSystemLibrary.K2_SetTimer;
KismetSystemLibrary.prototype.PauseTimerbyHandle = KismetSystemLibrary.prototype.K2_PauseTimerHandle;
KismetSystemLibrary.PauseTimerbyHandle = KismetSystemLibrary.K2_PauseTimerHandle;
KismetSystemLibrary.prototype.PauseTimerbyFunctionName = KismetSystemLibrary.prototype.K2_PauseTimer;
KismetSystemLibrary.PauseTimerbyFunctionName = KismetSystemLibrary.K2_PauseTimer;
KismetSystemLibrary.prototype.IsValid = KismetSystemLibrary.prototype.K2_IsValidTimerHandle;
KismetSystemLibrary.IsValid = KismetSystemLibrary.K2_IsValidTimerHandle;
KismetSystemLibrary.prototype.IsTimerPausedbyHandle = KismetSystemLibrary.prototype.K2_IsTimerPausedHandle;
KismetSystemLibrary.IsTimerPausedbyHandle = KismetSystemLibrary.K2_IsTimerPausedHandle;
KismetSystemLibrary.prototype.IsTimerPausedbyFunctionName = KismetSystemLibrary.prototype.K2_IsTimerPaused;
KismetSystemLibrary.IsTimerPausedbyFunctionName = KismetSystemLibrary.K2_IsTimerPaused;
KismetSystemLibrary.prototype.IsTimerActivebyHandle = KismetSystemLibrary.prototype.K2_IsTimerActiveHandle;
KismetSystemLibrary.IsTimerActivebyHandle = KismetSystemLibrary.K2_IsTimerActiveHandle;
KismetSystemLibrary.prototype.IsTimerActivebyFunctionName = KismetSystemLibrary.prototype.K2_IsTimerActive;
KismetSystemLibrary.IsTimerActivebyFunctionName = KismetSystemLibrary.K2_IsTimerActive;
KismetSystemLibrary.prototype.Invalidate = KismetSystemLibrary.prototype.K2_InvalidateTimerHandle;
KismetSystemLibrary.Invalidate = KismetSystemLibrary.K2_InvalidateTimerHandle;
KismetSystemLibrary.prototype.GetTimerRemainingTimebyHandle = KismetSystemLibrary.prototype.K2_GetTimerRemainingTimeHandle;
KismetSystemLibrary.GetTimerRemainingTimebyHandle = KismetSystemLibrary.K2_GetTimerRemainingTimeHandle;
KismetSystemLibrary.prototype.GetTimerRemainingTimebyFunctionName = KismetSystemLibrary.prototype.K2_GetTimerRemainingTime;
KismetSystemLibrary.GetTimerRemainingTimebyFunctionName = KismetSystemLibrary.K2_GetTimerRemainingTime;
KismetSystemLibrary.prototype.GetTimerElapsedTimebyHandle = KismetSystemLibrary.prototype.K2_GetTimerElapsedTimeHandle;
KismetSystemLibrary.GetTimerElapsedTimebyHandle = KismetSystemLibrary.K2_GetTimerElapsedTimeHandle;
KismetSystemLibrary.prototype.GetTimerElapsedTimebyFunctionName = KismetSystemLibrary.prototype.K2_GetTimerElapsedTime;
KismetSystemLibrary.GetTimerElapsedTimebyFunctionName = KismetSystemLibrary.K2_GetTimerElapsedTime;
KismetSystemLibrary.prototype.ClearTimerbyHandle = KismetSystemLibrary.prototype.K2_ClearTimerHandle;
KismetSystemLibrary.ClearTimerbyHandle = KismetSystemLibrary.K2_ClearTimerHandle;
KismetSystemLibrary.prototype.ClearTimerbyFunctionName = KismetSystemLibrary.prototype.K2_ClearTimer;
KismetSystemLibrary.ClearTimerbyFunctionName = KismetSystemLibrary.K2_ClearTimer;
KismetSystemLibrary.prototype.ClearandInvalidateTimerbyHandle = KismetSystemLibrary.prototype.K2_ClearAndInvalidateTimerHandle;
KismetSystemLibrary.ClearandInvalidateTimerbyHandle = KismetSystemLibrary.K2_ClearAndInvalidateTimerHandle;
KismetSystemLibrary.prototype.GetDisplayName = KismetSystemLibrary.prototype.GetClassDisplayName;
KismetSystemLibrary.GetDisplayName = KismetSystemLibrary.GetClassDisplayName;
KismetSystemLibrary.prototype.DrawDebugCone = KismetSystemLibrary.prototype.DrawDebugConeInDegrees;
KismetSystemLibrary.DrawDebugCone = KismetSystemLibrary.DrawDebugConeInDegrees;
KismetSystemLibrary.prototype.ComponentOverlapComponents = KismetSystemLibrary.prototype.ComponentOverlapComponents_NEW;
KismetSystemLibrary.ComponentOverlapComponents = KismetSystemLibrary.ComponentOverlapComponents_NEW;
KismetSystemLibrary.prototype.ComponentOverlapActors = KismetSystemLibrary.prototype.ComponentOverlapActors_NEW;
KismetSystemLibrary.ComponentOverlapActors = KismetSystemLibrary.ComponentOverlapActors_NEW;
KismetSystemLibrary.prototype.CapsuleTraceForObjects = KismetSystemLibrary.prototype.CapsuleTraceSingleForObjects;
KismetSystemLibrary.CapsuleTraceForObjects = KismetSystemLibrary.CapsuleTraceSingleForObjects;
KismetSystemLibrary.prototype.SingleCapsuleTraceByObjectDeprecated = KismetSystemLibrary.prototype.CapsuleTraceSingleByObject_DEPRECATED;
KismetSystemLibrary.SingleCapsuleTraceByObjectDeprecated = KismetSystemLibrary.CapsuleTraceSingleByObject_DEPRECATED;
KismetSystemLibrary.prototype.CapsuleTraceByChannel = KismetSystemLibrary.prototype.CapsuleTraceSingle_NEW;
KismetSystemLibrary.CapsuleTraceByChannel = KismetSystemLibrary.CapsuleTraceSingle_NEW;
KismetSystemLibrary.prototype.SingleCapsuleTraceByChannelDeprecated = KismetSystemLibrary.prototype.CapsuleTraceSingle_DEPRECATED;
KismetSystemLibrary.SingleCapsuleTraceByChannelDeprecated = KismetSystemLibrary.CapsuleTraceSingle_DEPRECATED;
KismetSystemLibrary.prototype.MultiCapsuleTraceForObjects = KismetSystemLibrary.prototype.CapsuleTraceMultiForObjects;
KismetSystemLibrary.MultiCapsuleTraceForObjects = KismetSystemLibrary.CapsuleTraceMultiForObjects;
KismetSystemLibrary.prototype.MultiCapsuleTraceByObjectDeprecated = KismetSystemLibrary.prototype.CapsuleTraceMultiByObject_DEPRECATED;
KismetSystemLibrary.MultiCapsuleTraceByObjectDeprecated = KismetSystemLibrary.CapsuleTraceMultiByObject_DEPRECATED;
KismetSystemLibrary.prototype.MultiCapsuleTraceByChannel = KismetSystemLibrary.prototype.CapsuleTraceMulti_NEW;
KismetSystemLibrary.MultiCapsuleTraceByChannel = KismetSystemLibrary.CapsuleTraceMulti_NEW;
KismetSystemLibrary.prototype.MultiCapsuleTraceByChannelDeprecated = KismetSystemLibrary.prototype.CapsuleTraceMulti_DEPRECATED;
KismetSystemLibrary.MultiCapsuleTraceByChannelDeprecated = KismetSystemLibrary.CapsuleTraceMulti_DEPRECATED;
KismetSystemLibrary.prototype.CapsuleOverlapComponents = KismetSystemLibrary.prototype.CapsuleOverlapComponents_NEW;
KismetSystemLibrary.CapsuleOverlapComponents = KismetSystemLibrary.CapsuleOverlapComponents_NEW;
KismetSystemLibrary.prototype.CapsuleOverlapActors = KismetSystemLibrary.prototype.CapsuleOverlapActors_NEW;
KismetSystemLibrary.CapsuleOverlapActors = KismetSystemLibrary.CapsuleOverlapActors_NEW;
KismetSystemLibrary.prototype.BoxTraceForObjects = KismetSystemLibrary.prototype.BoxTraceSingleForObjects;
KismetSystemLibrary.BoxTraceForObjects = KismetSystemLibrary.BoxTraceSingleForObjects;
KismetSystemLibrary.prototype.BoxTraceByChannel = KismetSystemLibrary.prototype.BoxTraceSingle;
KismetSystemLibrary.BoxTraceByChannel = KismetSystemLibrary.BoxTraceSingle;
KismetSystemLibrary.prototype.MultiBoxTraceForObjects = KismetSystemLibrary.prototype.BoxTraceMultiForObjects;
KismetSystemLibrary.MultiBoxTraceForObjects = KismetSystemLibrary.BoxTraceMultiForObjects;
KismetSystemLibrary.prototype.MultiBoxTraceByChannel = KismetSystemLibrary.prototype.BoxTraceMulti;
KismetSystemLibrary.MultiBoxTraceByChannel = KismetSystemLibrary.BoxTraceMulti;
KismetSystemLibrary.prototype.BoxOverlapComponents = KismetSystemLibrary.prototype.BoxOverlapComponents_NEW;
KismetSystemLibrary.BoxOverlapComponents = KismetSystemLibrary.BoxOverlapComponents_NEW;
KismetSystemLibrary.prototype.BoxOverlapActors = KismetSystemLibrary.prototype.BoxOverlapActors_NEW;
KismetSystemLibrary.BoxOverlapActors = KismetSystemLibrary.BoxOverlapActors_NEW;
GameplayStatics.prototype.SuggestProjectileVelocityCustomArc = GameplayStatics.prototype.SuggestProjectileVelocity_CustomArc;
GameplayStatics.SuggestProjectileVelocityCustomArc = GameplayStatics.SuggestProjectileVelocity_CustomArc;
GameplayStatics.prototype.GetClass = GameplayStatics.prototype.GetObjectClass;
GameplayStatics.GetClass = GameplayStatics.GetObjectClass;
GameplayStatics.prototype.SuggestProjectileVelocity = GameplayStatics.prototype.BlueprintSuggestProjectileVelocity;
GameplayStatics.SuggestProjectileVelocity = GameplayStatics.BlueprintSuggestProjectileVelocity;
KismetArrayLibrary.prototype.Shuffle = KismetArrayLibrary.prototype.Array_Shuffle;
KismetArrayLibrary.Shuffle = KismetArrayLibrary.Array_Shuffle;
KismetArrayLibrary.prototype.SetArrayElem = KismetArrayLibrary.prototype.Array_Set;
KismetArrayLibrary.SetArrayElem = KismetArrayLibrary.Array_Set;
KismetArrayLibrary.prototype.Resize = KismetArrayLibrary.prototype.Array_Resize;
KismetArrayLibrary.Resize = KismetArrayLibrary.Array_Resize;
KismetArrayLibrary.prototype.RemoveItem = KismetArrayLibrary.prototype.Array_RemoveItem;
KismetArrayLibrary.RemoveItem = KismetArrayLibrary.Array_RemoveItem;
KismetArrayLibrary.prototype.RemoveIndex = KismetArrayLibrary.prototype.Array_Remove;
KismetArrayLibrary.RemoveIndex = KismetArrayLibrary.Array_Remove;
KismetArrayLibrary.prototype.Length = KismetArrayLibrary.prototype.Array_Length;
KismetArrayLibrary.Length = KismetArrayLibrary.Array_Length;
KismetArrayLibrary.prototype.LastIndex = KismetArrayLibrary.prototype.Array_LastIndex;
KismetArrayLibrary.LastIndex = KismetArrayLibrary.Array_LastIndex;
KismetArrayLibrary.prototype.IsValidIndex = KismetArrayLibrary.prototype.Array_IsValidIndex;
KismetArrayLibrary.IsValidIndex = KismetArrayLibrary.Array_IsValidIndex;
KismetArrayLibrary.prototype.Insert = KismetArrayLibrary.prototype.Array_Insert;
KismetArrayLibrary.Insert = KismetArrayLibrary.Array_Insert;
KismetArrayLibrary.prototype.Get = KismetArrayLibrary.prototype.Array_Get;
KismetArrayLibrary.Get = KismetArrayLibrary.Array_Get;
KismetArrayLibrary.prototype.FindItem = KismetArrayLibrary.prototype.Array_Find;
KismetArrayLibrary.FindItem = KismetArrayLibrary.Array_Find;
KismetArrayLibrary.prototype.ContainsItem = KismetArrayLibrary.prototype.Array_Contains;
KismetArrayLibrary.ContainsItem = KismetArrayLibrary.Array_Contains;
KismetArrayLibrary.prototype.Clear = KismetArrayLibrary.prototype.Array_Clear;
KismetArrayLibrary.Clear = KismetArrayLibrary.Array_Clear;
KismetArrayLibrary.prototype.AppendArray = KismetArrayLibrary.prototype.Array_Append;
KismetArrayLibrary.AppendArray = KismetArrayLibrary.Array_Append;
KismetArrayLibrary.prototype.AddUnique = KismetArrayLibrary.prototype.Array_AddUnique;
KismetArrayLibrary.AddUnique = KismetArrayLibrary.Array_AddUnique;
KismetArrayLibrary.prototype.Add = KismetArrayLibrary.prototype.Array_Add;
KismetArrayLibrary.Add = KismetArrayLibrary.Array_Add;
KismetGuidLibrary.prototype.ParseStringtoGuid = KismetGuidLibrary.prototype.Parse_StringToGuid;
KismetGuidLibrary.ParseStringtoGuid = KismetGuidLibrary.Parse_StringToGuid;
KismetGuidLibrary.prototype.NotEqual = KismetGuidLibrary.prototype.NotEqual_GuidGuid;
KismetGuidLibrary.NotEqual = KismetGuidLibrary.NotEqual_GuidGuid;
KismetGuidLibrary.prototype.IsValid = KismetGuidLibrary.prototype.IsValid_Guid;
KismetGuidLibrary.IsValid = KismetGuidLibrary.IsValid_Guid;
KismetGuidLibrary.prototype.Equal = KismetGuidLibrary.prototype.EqualEqual_GuidGuid;
KismetGuidLibrary.Equal = KismetGuidLibrary.EqualEqual_GuidGuid;
KismetGuidLibrary.prototype.ToString = KismetGuidLibrary.prototype.Conv_GuidToString;
KismetGuidLibrary.ToString = KismetGuidLibrary.Conv_GuidToString;
KismetInputLibrary.prototype.IsTouchEvent = KismetInputLibrary.prototype.PointerEvent_IsTouchEvent;
KismetInputLibrary.IsTouchEvent = KismetInputLibrary.PointerEvent_IsTouchEvent;
KismetInputLibrary.prototype.IsMouseButtonDown = KismetInputLibrary.prototype.PointerEvent_IsMouseButtonDown;
KismetInputLibrary.IsMouseButtonDown = KismetInputLibrary.PointerEvent_IsMouseButtonDown;
KismetInputLibrary.prototype.GetWheelDelta = KismetInputLibrary.prototype.PointerEvent_GetWheelDelta;
KismetInputLibrary.GetWheelDelta = KismetInputLibrary.PointerEvent_GetWheelDelta;
KismetInputLibrary.prototype.GetUserIndex = KismetInputLibrary.prototype.PointerEvent_GetUserIndex;
KismetInputLibrary.GetUserIndex = KismetInputLibrary.PointerEvent_GetUserIndex;
KismetInputLibrary.prototype.GetTouchpadIndex = KismetInputLibrary.prototype.PointerEvent_GetTouchpadIndex;
KismetInputLibrary.GetTouchpadIndex = KismetInputLibrary.PointerEvent_GetTouchpadIndex;
KismetInputLibrary.prototype.GetScreenSpacePosition = KismetInputLibrary.prototype.PointerEvent_GetScreenSpacePosition;
KismetInputLibrary.GetScreenSpacePosition = KismetInputLibrary.PointerEvent_GetScreenSpacePosition;
KismetInputLibrary.prototype.GetPointerIndex = KismetInputLibrary.prototype.PointerEvent_GetPointerIndex;
KismetInputLibrary.GetPointerIndex = KismetInputLibrary.PointerEvent_GetPointerIndex;
KismetInputLibrary.prototype.GetLastScreenSpacePosition = KismetInputLibrary.prototype.PointerEvent_GetLastScreenSpacePosition;
KismetInputLibrary.GetLastScreenSpacePosition = KismetInputLibrary.PointerEvent_GetLastScreenSpacePosition;
KismetInputLibrary.prototype.GetGestureDelta = KismetInputLibrary.prototype.PointerEvent_GetGestureDelta;
KismetInputLibrary.GetGestureDelta = KismetInputLibrary.PointerEvent_GetGestureDelta;
KismetInputLibrary.prototype.GetEffectingButton = KismetInputLibrary.prototype.PointerEvent_GetEffectingButton;
KismetInputLibrary.GetEffectingButton = KismetInputLibrary.PointerEvent_GetEffectingButton;
KismetInputLibrary.prototype.GetCursorDelta = KismetInputLibrary.prototype.PointerEvent_GetCursorDelta;
KismetInputLibrary.GetCursorDelta = KismetInputLibrary.PointerEvent_GetCursorDelta;
KismetInputLibrary.prototype.IsShiftDown = KismetInputLibrary.prototype.InputEvent_IsShiftDown;
KismetInputLibrary.IsShiftDown = KismetInputLibrary.InputEvent_IsShiftDown;
KismetInputLibrary.prototype.IsRightShiftDown = KismetInputLibrary.prototype.InputEvent_IsRightShiftDown;
KismetInputLibrary.IsRightShiftDown = KismetInputLibrary.InputEvent_IsRightShiftDown;
KismetInputLibrary.prototype.IsRightControlDown = KismetInputLibrary.prototype.InputEvent_IsRightControlDown;
KismetInputLibrary.IsRightControlDown = KismetInputLibrary.InputEvent_IsRightControlDown;
KismetInputLibrary.prototype.IsRightCommandDown = KismetInputLibrary.prototype.InputEvent_IsRightCommandDown;
KismetInputLibrary.IsRightCommandDown = KismetInputLibrary.InputEvent_IsRightCommandDown;
KismetInputLibrary.prototype.IsRightAltDown = KismetInputLibrary.prototype.InputEvent_IsRightAltDown;
KismetInputLibrary.IsRightAltDown = KismetInputLibrary.InputEvent_IsRightAltDown;
KismetInputLibrary.prototype.IsRepeat = KismetInputLibrary.prototype.InputEvent_IsRepeat;
KismetInputLibrary.IsRepeat = KismetInputLibrary.InputEvent_IsRepeat;
KismetInputLibrary.prototype.IsLeftShiftDown = KismetInputLibrary.prototype.InputEvent_IsLeftShiftDown;
KismetInputLibrary.IsLeftShiftDown = KismetInputLibrary.InputEvent_IsLeftShiftDown;
KismetInputLibrary.prototype.IsLeftControlDown = KismetInputLibrary.prototype.InputEvent_IsLeftControlDown;
KismetInputLibrary.IsLeftControlDown = KismetInputLibrary.InputEvent_IsLeftControlDown;
KismetInputLibrary.prototype.IsLeftCommandDown = KismetInputLibrary.prototype.InputEvent_IsLeftCommandDown;
KismetInputLibrary.IsLeftCommandDown = KismetInputLibrary.InputEvent_IsLeftCommandDown;
KismetInputLibrary.prototype.IsLeftAltDown = KismetInputLibrary.prototype.InputEvent_IsLeftAltDown;
KismetInputLibrary.IsLeftAltDown = KismetInputLibrary.InputEvent_IsLeftAltDown;
KismetInputLibrary.prototype.IsControlDown = KismetInputLibrary.prototype.InputEvent_IsControlDown;
KismetInputLibrary.IsControlDown = KismetInputLibrary.InputEvent_IsControlDown;
KismetInputLibrary.prototype.IsCommandDown = KismetInputLibrary.prototype.InputEvent_IsCommandDown;
KismetInputLibrary.IsCommandDown = KismetInputLibrary.InputEvent_IsCommandDown;
KismetInputLibrary.prototype.IsAltDown = KismetInputLibrary.prototype.InputEvent_IsAltDown;
KismetInputLibrary.IsAltDown = KismetInputLibrary.InputEvent_IsAltDown;
KismetInputLibrary.prototype.Equal = KismetInputLibrary.prototype.EqualEqual_KeyKey;
KismetInputLibrary.Equal = KismetInputLibrary.EqualEqual_KeyKey;
KismetInputLibrary.prototype.Equal = KismetInputLibrary.prototype.EqualEqual_InputChordInputChord;
KismetInputLibrary.Equal = KismetInputLibrary.EqualEqual_InputChordInputChord;
KismetInputLibrary.prototype.GetEffectingButton = KismetInputLibrary.prototype.ControllerEvent_GetEffectingButton;
KismetInputLibrary.GetEffectingButton = KismetInputLibrary.ControllerEvent_GetEffectingButton;
KismetMathLibrary.prototype.BitwiseXOR = KismetMathLibrary.prototype.Xor_IntInt;
KismetMathLibrary.BitwiseXOR = KismetMathLibrary.Xor_IntInt;
KismetMathLibrary.prototype.VectorLengthSquared = KismetMathLibrary.prototype.VSizeSquared;
KismetMathLibrary.VectorLengthSquared = KismetMathLibrary.VSizeSquared;
KismetMathLibrary.prototype.Vector2dLengthSquared = KismetMathLibrary.prototype.VSize2DSquared;
KismetMathLibrary.Vector2dLengthSquared = KismetMathLibrary.VSize2DSquared;
KismetMathLibrary.prototype.Vector2dLength = KismetMathLibrary.prototype.VSize2D;
KismetMathLibrary.Vector2dLength = KismetMathLibrary.VSize2D;
KismetMathLibrary.prototype.VectorLength = KismetMathLibrary.prototype.VSize;
KismetMathLibrary.VectorLength = KismetMathLibrary.VSize;
KismetMathLibrary.prototype.Lerp = KismetMathLibrary.prototype.VLerp;
KismetMathLibrary.Lerp = KismetMathLibrary.VLerp;
KismetMathLibrary.prototype.Ease = KismetMathLibrary.prototype.VEase;
KismetMathLibrary.Ease = KismetMathLibrary.VEase;
KismetMathLibrary.prototype.Lerp = KismetMathLibrary.prototype.TLerp;
KismetMathLibrary.Lerp = KismetMathLibrary.TLerp;
KismetMathLibrary.prototype.ZeroValue = KismetMathLibrary.prototype.TimespanZeroValue;
KismetMathLibrary.ZeroValue = KismetMathLibrary.TimespanZeroValue;
KismetMathLibrary.prototype.MinValue = KismetMathLibrary.prototype.TimespanMinValue;
KismetMathLibrary.MinValue = KismetMathLibrary.TimespanMinValue;
KismetMathLibrary.prototype.MaxValue = KismetMathLibrary.prototype.TimespanMaxValue;
KismetMathLibrary.MaxValue = KismetMathLibrary.TimespanMaxValue;
KismetMathLibrary.prototype.Ease = KismetMathLibrary.prototype.TEase;
KismetMathLibrary.Ease = KismetMathLibrary.TEase;
KismetMathLibrary.prototype.Sign = KismetMathLibrary.prototype.SignOfInteger;
KismetMathLibrary.Sign = KismetMathLibrary.SignOfInteger;
KismetMathLibrary.prototype.Sign = KismetMathLibrary.prototype.SignOfFloat;
KismetMathLibrary.Sign = KismetMathLibrary.SignOfFloat;
KismetMathLibrary.prototype.RotateVectorAroundAxis = KismetMathLibrary.prototype.RotateAngleAxis;
KismetMathLibrary.RotateVectorAroundAxis = KismetMathLibrary.RotateAngleAxis;
KismetMathLibrary.prototype.Lerp = KismetMathLibrary.prototype.RLerp;
KismetMathLibrary.Lerp = KismetMathLibrary.RLerp;
KismetMathLibrary.prototype.RGBtoHSV = KismetMathLibrary.prototype.RGBToHSV_Vector;
KismetMathLibrary.RGBtoHSV = KismetMathLibrary.RGBToHSV_Vector;
KismetMathLibrary.prototype.Ease = KismetMathLibrary.prototype.REase;
KismetMathLibrary.Ease = KismetMathLibrary.REase;
KismetMathLibrary.prototype.BitwiseOR = KismetMathLibrary.prototype.Or_IntInt;
KismetMathLibrary.BitwiseOR = KismetMathLibrary.Or_IntInt;
KismetMathLibrary.prototype.NotEqual = KismetMathLibrary.prototype.NotEqual_VectorVector;
KismetMathLibrary.NotEqual = KismetMathLibrary.NotEqual_VectorVector;
KismetMathLibrary.prototype.NotEqual = KismetMathLibrary.prototype.NotEqual_Vector2DVector2D;
KismetMathLibrary.NotEqual = KismetMathLibrary.NotEqual_Vector2DVector2D;
KismetMathLibrary.prototype.NotEqual = KismetMathLibrary.prototype.NotEqual_TimespanTimespan;
KismetMathLibrary.NotEqual = KismetMathLibrary.NotEqual_TimespanTimespan;
KismetMathLibrary.prototype.NotEqual = KismetMathLibrary.prototype.NotEqual_RotatorRotator;
KismetMathLibrary.NotEqual = KismetMathLibrary.NotEqual_RotatorRotator;
KismetMathLibrary.prototype.NotEqual = KismetMathLibrary.prototype.NotEqual_ObjectObject;
KismetMathLibrary.NotEqual = KismetMathLibrary.NotEqual_ObjectObject;
KismetMathLibrary.prototype.NotEqual = KismetMathLibrary.prototype.NotEqual_NameName;
KismetMathLibrary.NotEqual = KismetMathLibrary.NotEqual_NameName;
KismetMathLibrary.prototype.NotEqual = KismetMathLibrary.prototype.NotEqual_IntInt;
KismetMathLibrary.NotEqual = KismetMathLibrary.NotEqual_IntInt;
KismetMathLibrary.prototype.NotEqual = KismetMathLibrary.prototype.NotEqual_FloatFloat;
KismetMathLibrary.NotEqual = KismetMathLibrary.NotEqual_FloatFloat;
KismetMathLibrary.prototype.NotEqual = KismetMathLibrary.prototype.NotEqual_DateTimeDateTime;
KismetMathLibrary.NotEqual = KismetMathLibrary.NotEqual_DateTimeDateTime;
KismetMathLibrary.prototype.NotEqual = KismetMathLibrary.prototype.NotEqual_ClassClass;
KismetMathLibrary.NotEqual = KismetMathLibrary.NotEqual_ClassClass;
KismetMathLibrary.prototype.NotEqual = KismetMathLibrary.prototype.NotEqual_ByteByte;
KismetMathLibrary.NotEqual = KismetMathLibrary.NotEqual_ByteByte;
KismetMathLibrary.prototype.NotEqualBoolean = KismetMathLibrary.prototype.NotEqual_BoolBool;
KismetMathLibrary.NotEqualBoolean = KismetMathLibrary.NotEqual_BoolBool;
KismetMathLibrary.prototype.NOTBoolean = KismetMathLibrary.prototype.Not_PreBool;
KismetMathLibrary.NOTBoolean = KismetMathLibrary.Not_PreBool;
KismetMathLibrary.prototype.BitwiseNOT = KismetMathLibrary.prototype.Not_Int;
KismetMathLibrary.BitwiseNOT = KismetMathLibrary.Not_Int;
KismetMathLibrary.prototype.Delta = KismetMathLibrary.prototype.NormalizedDeltaRotator;
KismetMathLibrary.Delta = KismetMathLibrary.NormalizedDeltaRotator;
KismetMathLibrary.prototype.Normalize2D = KismetMathLibrary.prototype.Normal2D;
KismetMathLibrary.Normalize2D = KismetMathLibrary.Normal2D;
KismetMathLibrary.prototype.Normalize = KismetMathLibrary.prototype.Normal;
KismetMathLibrary.Normalize = KismetMathLibrary.Normal;
KismetMathLibrary.prototype.InvertRotator = KismetMathLibrary.prototype.NegateRotator;
KismetMathLibrary.InvertRotator = KismetMathLibrary.NegateRotator;
KismetMathLibrary.prototype.NearlyEqual = KismetMathLibrary.prototype.NearlyEqual_TransformTransform;
KismetMathLibrary.NearlyEqual = KismetMathLibrary.NearlyEqual_TransformTransform;
KismetMathLibrary.prototype.NearlyEqual = KismetMathLibrary.prototype.NearlyEqual_FloatFloat;
KismetMathLibrary.NearlyEqual = KismetMathLibrary.NearlyEqual_FloatFloat;
KismetMathLibrary.prototype.Power = KismetMathLibrary.prototype.MultiplyMultiply_FloatFloat;
KismetMathLibrary.Power = KismetMathLibrary.MultiplyMultiply_FloatFloat;
KismetMathLibrary.prototype.ScaleRotator = KismetMathLibrary.prototype.Multiply_RotatorInt;
KismetMathLibrary.ScaleRotator = KismetMathLibrary.Multiply_RotatorInt;
KismetMathLibrary.prototype.ScaleRotator = KismetMathLibrary.prototype.Multiply_RotatorFloat;
KismetMathLibrary.ScaleRotator = KismetMathLibrary.Multiply_RotatorFloat;
KismetMathLibrary.prototype.LinePlaneIntersection = KismetMathLibrary.prototype.LinePlaneIntersection_OriginNormal;
KismetMathLibrary.LinePlaneIntersection = KismetMathLibrary.LinePlaneIntersection_OriginNormal;
KismetMathLibrary.prototype.LerpUsingHSV = KismetMathLibrary.prototype.LinearColorLerpUsingHSV;
KismetMathLibrary.LerpUsingHSV = KismetMathLibrary.LinearColorLerpUsingHSV;
KismetMathLibrary.prototype.Lerp = KismetMathLibrary.prototype.LinearColorLerp;
KismetMathLibrary.Lerp = KismetMathLibrary.LinearColorLerp;
KismetMathLibrary.prototype.UnrotateVector = KismetMathLibrary.prototype.LessLess_VectorRotator;
KismetMathLibrary.UnrotateVector = KismetMathLibrary.LessLess_VectorRotator;
KismetMathLibrary.prototype.InRange = KismetMathLibrary.prototype.InRange_FloatFloat;
KismetMathLibrary.InRange = KismetMathLibrary.InRange_FloatFloat;
KismetMathLibrary.prototype.HSVtoRGB = KismetMathLibrary.prototype.HSVToRGB_Vector;
KismetMathLibrary.HSVtoRGB = KismetMathLibrary.HSVToRGB_Vector;
KismetMathLibrary.prototype.Snaptogrid = KismetMathLibrary.prototype.GridSnap_Float;
KismetMathLibrary.Snaptogrid = KismetMathLibrary.GridSnap_Float;
KismetMathLibrary.prototype.RotateVector = KismetMathLibrary.prototype.GreaterGreater_VectorRotator;
KismetMathLibrary.RotateVector = KismetMathLibrary.GreaterGreater_VectorRotator;
KismetMathLibrary.prototype.Truncate = KismetMathLibrary.prototype.FTrunc;
KismetMathLibrary.Truncate = KismetMathLibrary.FTrunc;
KismetMathLibrary.prototype.Division = KismetMathLibrary.prototype.FMod;
KismetMathLibrary.Division = KismetMathLibrary.FMod;
KismetMathLibrary.prototype.Min = KismetMathLibrary.prototype.FMin;
KismetMathLibrary.Min = KismetMathLibrary.FMin;
KismetMathLibrary.prototype.Max = KismetMathLibrary.prototype.FMax;
KismetMathLibrary.Max = KismetMathLibrary.FMax;
KismetMathLibrary.prototype.Floor = KismetMathLibrary.prototype.FFloor;
KismetMathLibrary.Floor = KismetMathLibrary.FFloor;
KismetMathLibrary.prototype.Clamp = KismetMathLibrary.prototype.FClamp;
KismetMathLibrary.Clamp = KismetMathLibrary.FClamp;
KismetMathLibrary.prototype.Equal = KismetMathLibrary.prototype.EqualEqual_VectorVector;
KismetMathLibrary.Equal = KismetMathLibrary.EqualEqual_VectorVector;
KismetMathLibrary.prototype.Equal = KismetMathLibrary.prototype.EqualEqual_Vector2DVector2D;
KismetMathLibrary.Equal = KismetMathLibrary.EqualEqual_Vector2DVector2D;
KismetMathLibrary.prototype.EqualTransform = KismetMathLibrary.prototype.EqualEqual_TransformTransform;
KismetMathLibrary.EqualTransform = KismetMathLibrary.EqualEqual_TransformTransform;
KismetMathLibrary.prototype.Equal = KismetMathLibrary.prototype.EqualEqual_TimespanTimespan;
KismetMathLibrary.Equal = KismetMathLibrary.EqualEqual_TimespanTimespan;
KismetMathLibrary.prototype.Equal = KismetMathLibrary.prototype.EqualEqual_RotatorRotator;
KismetMathLibrary.Equal = KismetMathLibrary.EqualEqual_RotatorRotator;
KismetMathLibrary.prototype.Equal = KismetMathLibrary.prototype.EqualEqual_ObjectObject;
KismetMathLibrary.Equal = KismetMathLibrary.EqualEqual_ObjectObject;
KismetMathLibrary.prototype.Equal = KismetMathLibrary.prototype.EqualEqual_NameName;
KismetMathLibrary.Equal = KismetMathLibrary.EqualEqual_NameName;
KismetMathLibrary.prototype.Equal = KismetMathLibrary.prototype.EqualEqual_IntInt;
KismetMathLibrary.Equal = KismetMathLibrary.EqualEqual_IntInt;
KismetMathLibrary.prototype.Equal = KismetMathLibrary.prototype.EqualEqual_FloatFloat;
KismetMathLibrary.Equal = KismetMathLibrary.EqualEqual_FloatFloat;
KismetMathLibrary.prototype.Equal = KismetMathLibrary.prototype.EqualEqual_DateTimeDateTime;
KismetMathLibrary.Equal = KismetMathLibrary.EqualEqual_DateTimeDateTime;
KismetMathLibrary.prototype.Equal = KismetMathLibrary.prototype.EqualEqual_ClassClass;
KismetMathLibrary.Equal = KismetMathLibrary.EqualEqual_ClassClass;
KismetMathLibrary.prototype.Equal = KismetMathLibrary.prototype.EqualEqual_ByteByte;
KismetMathLibrary.Equal = KismetMathLibrary.EqualEqual_ByteByte;
KismetMathLibrary.prototype.EqualBoolean = KismetMathLibrary.prototype.EqualEqual_BoolBool;
KismetMathLibrary.EqualBoolean = KismetMathLibrary.EqualEqual_BoolBool;
KismetMathLibrary.prototype.DotProduct = KismetMathLibrary.prototype.DotProduct2D;
KismetMathLibrary.DotProduct = KismetMathLibrary.DotProduct2D;
KismetMathLibrary.prototype.DotProduct = KismetMathLibrary.prototype.Dot_VectorVector;
KismetMathLibrary.DotProduct = KismetMathLibrary.Dot_VectorVector;
KismetMathLibrary.prototype.Tan = KismetMathLibrary.prototype.DegTan;
KismetMathLibrary.Tan = KismetMathLibrary.DegTan;
KismetMathLibrary.prototype.Sin = KismetMathLibrary.prototype.DegSin;
KismetMathLibrary.Sin = KismetMathLibrary.DegSin;
KismetMathLibrary.prototype.Cos = KismetMathLibrary.prototype.DegCos;
KismetMathLibrary.Cos = KismetMathLibrary.DegCos;
KismetMathLibrary.prototype.Atan2 = KismetMathLibrary.prototype.DegAtan2;
KismetMathLibrary.Atan2 = KismetMathLibrary.DegAtan2;
KismetMathLibrary.prototype.Atan = KismetMathLibrary.prototype.DegAtan;
KismetMathLibrary.Atan = KismetMathLibrary.DegAtan;
KismetMathLibrary.prototype.Asin = KismetMathLibrary.prototype.DegAsin;
KismetMathLibrary.Asin = KismetMathLibrary.DegAsin;
KismetMathLibrary.prototype.Acos = KismetMathLibrary.prototype.DegAcos;
KismetMathLibrary.Acos = KismetMathLibrary.DegAcos;
KismetMathLibrary.prototype.MinValue = KismetMathLibrary.prototype.DateTimeMinValue;
KismetMathLibrary.MinValue = KismetMathLibrary.DateTimeMinValue;
KismetMathLibrary.prototype.MaxValue = KismetMathLibrary.prototype.DateTimeMaxValue;
KismetMathLibrary.MaxValue = KismetMathLibrary.DateTimeMaxValue;
KismetMathLibrary.prototype.CrossProduct = KismetMathLibrary.prototype.CrossProduct2D;
KismetMathLibrary.CrossProduct = KismetMathLibrary.CrossProduct2D;
KismetMathLibrary.prototype.CrossProduct = KismetMathLibrary.prototype.Cross_VectorVector;
KismetMathLibrary.CrossProduct = KismetMathLibrary.Cross_VectorVector;
KismetMathLibrary.prototype.ToVector2D = KismetMathLibrary.prototype.Conv_VectorToVector2D;
KismetMathLibrary.ToVector2D = KismetMathLibrary.Conv_VectorToVector2D;
KismetMathLibrary.prototype.ToTransform = KismetMathLibrary.prototype.Conv_VectorToTransform;
KismetMathLibrary.ToTransform = KismetMathLibrary.Conv_VectorToTransform;
KismetMathLibrary.prototype.RotationFromXVector = KismetMathLibrary.prototype.Conv_VectorToRotator;
KismetMathLibrary.RotationFromXVector = KismetMathLibrary.Conv_VectorToRotator;
KismetMathLibrary.prototype.ToLinearColor = KismetMathLibrary.prototype.Conv_VectorToLinearColor;
KismetMathLibrary.ToLinearColor = KismetMathLibrary.Conv_VectorToLinearColor;
KismetMathLibrary.prototype.ToVector = KismetMathLibrary.prototype.Conv_Vector2DToVector;
KismetMathLibrary.ToVector = KismetMathLibrary.Conv_Vector2DToVector;
KismetMathLibrary.prototype.GetRotationXVector = KismetMathLibrary.prototype.Conv_RotatorToVector;
KismetMathLibrary.GetRotationXVector = KismetMathLibrary.Conv_RotatorToVector;
KismetMathLibrary.prototype.ToVector = KismetMathLibrary.prototype.Conv_LinearColorToVector;
KismetMathLibrary.ToVector = KismetMathLibrary.Conv_LinearColorToVector;
KismetMathLibrary.prototype.ToColor = KismetMathLibrary.prototype.Conv_LinearColorToColor;
KismetMathLibrary.ToColor = KismetMathLibrary.Conv_LinearColorToColor;
KismetMathLibrary.prototype.ToFloat = KismetMathLibrary.prototype.Conv_IntToFloat;
KismetMathLibrary.ToFloat = KismetMathLibrary.Conv_IntToFloat;
KismetMathLibrary.prototype.ToByte = KismetMathLibrary.prototype.Conv_IntToByte;
KismetMathLibrary.ToByte = KismetMathLibrary.Conv_IntToByte;
KismetMathLibrary.prototype.ToBool = KismetMathLibrary.prototype.Conv_IntToBool;
KismetMathLibrary.ToBool = KismetMathLibrary.Conv_IntToBool;
KismetMathLibrary.prototype.ToVector = KismetMathLibrary.prototype.Conv_FloatToVector;
KismetMathLibrary.ToVector = KismetMathLibrary.Conv_FloatToVector;
KismetMathLibrary.prototype.ToLinearColor = KismetMathLibrary.prototype.Conv_FloatToLinearColor;
KismetMathLibrary.ToLinearColor = KismetMathLibrary.Conv_FloatToLinearColor;
KismetMathLibrary.prototype.ToLinearColor = KismetMathLibrary.prototype.Conv_ColorToLinearColor;
KismetMathLibrary.ToLinearColor = KismetMathLibrary.Conv_ColorToLinearColor;
KismetMathLibrary.prototype.ToInt = KismetMathLibrary.prototype.Conv_ByteToInt;
KismetMathLibrary.ToInt = KismetMathLibrary.Conv_ByteToInt;
KismetMathLibrary.prototype.ToFloat = KismetMathLibrary.prototype.Conv_ByteToFloat;
KismetMathLibrary.ToFloat = KismetMathLibrary.Conv_ByteToFloat;
KismetMathLibrary.prototype.ToInt = KismetMathLibrary.prototype.Conv_BoolToInt;
KismetMathLibrary.ToInt = KismetMathLibrary.Conv_BoolToInt;
KismetMathLibrary.prototype.ToFloat = KismetMathLibrary.prototype.Conv_BoolToFloat;
KismetMathLibrary.ToFloat = KismetMathLibrary.Conv_BoolToFloat;
KismetMathLibrary.prototype.ToByte = KismetMathLibrary.prototype.Conv_BoolToByte;
KismetMathLibrary.ToByte = KismetMathLibrary.Conv_BoolToByte;
KismetMathLibrary.prototype.CombineRotators = KismetMathLibrary.prototype.ComposeRotators;
KismetMathLibrary.CombineRotators = KismetMathLibrary.ComposeRotators;
KismetMathLibrary.prototype.XORBoolean = KismetMathLibrary.prototype.BooleanXOR;
KismetMathLibrary.XORBoolean = KismetMathLibrary.BooleanXOR;
KismetMathLibrary.prototype.ORBoolean = KismetMathLibrary.prototype.BooleanOR;
KismetMathLibrary.ORBoolean = KismetMathLibrary.BooleanOR;
KismetMathLibrary.prototype.NORBoolean = KismetMathLibrary.prototype.BooleanNOR;
KismetMathLibrary.NORBoolean = KismetMathLibrary.BooleanNOR;
KismetMathLibrary.prototype.NANDBoolean = KismetMathLibrary.prototype.BooleanNAND;
KismetMathLibrary.NANDBoolean = KismetMathLibrary.BooleanNAND;
KismetMathLibrary.prototype.ANDBoolean = KismetMathLibrary.prototype.BooleanAND;
KismetMathLibrary.ANDBoolean = KismetMathLibrary.BooleanAND;
KismetMathLibrary.prototype.Min = KismetMathLibrary.prototype.BMin;
KismetMathLibrary.Min = KismetMathLibrary.BMin;
KismetMathLibrary.prototype.Max = KismetMathLibrary.prototype.BMax;
KismetMathLibrary.Max = KismetMathLibrary.BMax;
KismetMathLibrary.prototype.BitwiseAND = KismetMathLibrary.prototype.And_IntInt;
KismetMathLibrary.BitwiseAND = KismetMathLibrary.And_IntInt;
KismetMathLibrary.prototype.Absolute = KismetMathLibrary.prototype.Abs_Int;
KismetMathLibrary.Absolute = KismetMathLibrary.Abs_Int;
KismetMathLibrary.prototype.Absolute = KismetMathLibrary.prototype.Abs;
KismetMathLibrary.Absolute = KismetMathLibrary.Abs;
KismetStringLibrary.prototype.NotEqual = KismetStringLibrary.prototype.NotEqual_StrStr;
KismetStringLibrary.NotEqual = KismetStringLibrary.NotEqual_StrStr;
KismetStringLibrary.prototype.Equal = KismetStringLibrary.prototype.EqualEqual_StrStr;
KismetStringLibrary.Equal = KismetStringLibrary.EqualEqual_StrStr;
KismetStringLibrary.prototype.ToString = KismetStringLibrary.prototype.Conv_VectorToString;
KismetStringLibrary.ToString = KismetStringLibrary.Conv_VectorToString;
KismetStringLibrary.prototype.ToString = KismetStringLibrary.prototype.Conv_Vector2dToString;
KismetStringLibrary.ToString = KismetStringLibrary.Conv_Vector2dToString;
KismetStringLibrary.prototype.ToString = KismetStringLibrary.prototype.Conv_TransformToString;
KismetStringLibrary.ToString = KismetStringLibrary.Conv_TransformToString;
KismetStringLibrary.prototype.StringtoVector2D = KismetStringLibrary.prototype.Conv_StringToVector2D;
KismetStringLibrary.StringtoVector2D = KismetStringLibrary.Conv_StringToVector2D;
KismetStringLibrary.prototype.StringtoVector = KismetStringLibrary.prototype.Conv_StringToVector;
KismetStringLibrary.StringtoVector = KismetStringLibrary.Conv_StringToVector;
KismetStringLibrary.prototype.StringtoRotator = KismetStringLibrary.prototype.Conv_StringToRotator;
KismetStringLibrary.StringtoRotator = KismetStringLibrary.Conv_StringToRotator;
KismetStringLibrary.prototype.StringToName = KismetStringLibrary.prototype.Conv_StringToName;
KismetStringLibrary.StringToName = KismetStringLibrary.Conv_StringToName;
KismetStringLibrary.prototype.StringToInt = KismetStringLibrary.prototype.Conv_StringToInt;
KismetStringLibrary.StringToInt = KismetStringLibrary.Conv_StringToInt;
KismetStringLibrary.prototype.StringToFloat = KismetStringLibrary.prototype.Conv_StringToFloat;
KismetStringLibrary.StringToFloat = KismetStringLibrary.Conv_StringToFloat;
KismetStringLibrary.prototype.StringtoColor = KismetStringLibrary.prototype.Conv_StringToColor;
KismetStringLibrary.StringtoColor = KismetStringLibrary.Conv_StringToColor;
KismetStringLibrary.prototype.ToString = KismetStringLibrary.prototype.Conv_RotatorToString;
KismetStringLibrary.ToString = KismetStringLibrary.Conv_RotatorToString;
KismetStringLibrary.prototype.ToString = KismetStringLibrary.prototype.Conv_ObjectToString;
KismetStringLibrary.ToString = KismetStringLibrary.Conv_ObjectToString;
KismetStringLibrary.prototype.ToString = KismetStringLibrary.prototype.Conv_NameToString;
KismetStringLibrary.ToString = KismetStringLibrary.Conv_NameToString;
KismetStringLibrary.prototype.ToString = KismetStringLibrary.prototype.Conv_IntToString;
KismetStringLibrary.ToString = KismetStringLibrary.Conv_IntToString;
KismetStringLibrary.prototype.ToString = KismetStringLibrary.prototype.Conv_FloatToString;
KismetStringLibrary.ToString = KismetStringLibrary.Conv_FloatToString;
KismetStringLibrary.prototype.ToString = KismetStringLibrary.prototype.Conv_ColorToString;
KismetStringLibrary.ToString = KismetStringLibrary.Conv_ColorToString;
KismetStringLibrary.prototype.ToString = KismetStringLibrary.prototype.Conv_ByteToString;
KismetStringLibrary.ToString = KismetStringLibrary.Conv_ByteToString;
KismetStringLibrary.prototype.ToString = KismetStringLibrary.prototype.Conv_BoolToString;
KismetStringLibrary.ToString = KismetStringLibrary.Conv_BoolToString;
KismetStringLibrary.prototype.Append = KismetStringLibrary.prototype.Concat_StrStr;
KismetStringLibrary.Append = KismetStringLibrary.Concat_StrStr;
KismetStringLibrary.prototype.BuildString = KismetStringLibrary.prototype.BuildString_Vector2d;
KismetStringLibrary.BuildString = KismetStringLibrary.BuildString_Vector2d;
KismetStringLibrary.prototype.BuildString = KismetStringLibrary.prototype.BuildString_Vector;
KismetStringLibrary.BuildString = KismetStringLibrary.BuildString_Vector;
KismetStringLibrary.prototype.BuildString = KismetStringLibrary.prototype.BuildString_Rotator;
KismetStringLibrary.BuildString = KismetStringLibrary.BuildString_Rotator;
KismetStringLibrary.prototype.BuildString = KismetStringLibrary.prototype.BuildString_Object;
KismetStringLibrary.BuildString = KismetStringLibrary.BuildString_Object;
KismetStringLibrary.prototype.BuildString = KismetStringLibrary.prototype.BuildString_Name;
KismetStringLibrary.BuildString = KismetStringLibrary.BuildString_Name;
KismetStringLibrary.prototype.BuildString = KismetStringLibrary.prototype.BuildString_Int;
KismetStringLibrary.BuildString = KismetStringLibrary.BuildString_Int;
KismetStringLibrary.prototype.BuildString = KismetStringLibrary.prototype.BuildString_Float;
KismetStringLibrary.BuildString = KismetStringLibrary.BuildString_Float;
KismetStringLibrary.prototype.BuildString = KismetStringLibrary.prototype.BuildString_Color;
KismetStringLibrary.BuildString = KismetStringLibrary.BuildString_Color;
KismetStringLibrary.prototype.BuildString = KismetStringLibrary.prototype.BuildString_Bool;
KismetStringLibrary.BuildString = KismetStringLibrary.BuildString_Bool;
KismetTextLibrary.prototype.NotEqual = KismetTextLibrary.prototype.NotEqual_TextText;
KismetTextLibrary.NotEqual = KismetTextLibrary.NotEqual_TextText;
KismetTextLibrary.prototype.Equal = KismetTextLibrary.prototype.EqualEqual_TextText;
KismetTextLibrary.Equal = KismetTextLibrary.EqualEqual_TextText;
KismetTextLibrary.prototype.ToText = KismetTextLibrary.prototype.Conv_VectorToText;
KismetTextLibrary.ToText = KismetTextLibrary.Conv_VectorToText;
KismetTextLibrary.prototype.ToText = KismetTextLibrary.prototype.Conv_Vector2dToText;
KismetTextLibrary.ToText = KismetTextLibrary.Conv_Vector2dToText;
KismetTextLibrary.prototype.ToText = KismetTextLibrary.prototype.Conv_TransformToText;
KismetTextLibrary.ToText = KismetTextLibrary.Conv_TransformToText;
KismetTextLibrary.prototype.ToString = KismetTextLibrary.prototype.Conv_TextToString;
KismetTextLibrary.ToString = KismetTextLibrary.Conv_TextToString;
KismetTextLibrary.prototype.ToText = KismetTextLibrary.prototype.Conv_StringToText;
KismetTextLibrary.ToText = KismetTextLibrary.Conv_StringToText;
KismetTextLibrary.prototype.ToText = KismetTextLibrary.prototype.Conv_RotatorToText;
KismetTextLibrary.ToText = KismetTextLibrary.Conv_RotatorToText;
KismetTextLibrary.prototype.ToText = KismetTextLibrary.prototype.Conv_ObjectToText;
KismetTextLibrary.ToText = KismetTextLibrary.Conv_ObjectToText;
KismetTextLibrary.prototype.ToText = KismetTextLibrary.prototype.Conv_NameToText;
KismetTextLibrary.ToText = KismetTextLibrary.Conv_NameToText;
KismetTextLibrary.prototype.ToText = KismetTextLibrary.prototype.Conv_IntToText;
KismetTextLibrary.ToText = KismetTextLibrary.Conv_IntToText;
KismetTextLibrary.prototype.ToText = KismetTextLibrary.prototype.Conv_FloatToText;
KismetTextLibrary.ToText = KismetTextLibrary.Conv_FloatToText;
KismetTextLibrary.prototype.ToText = KismetTextLibrary.prototype.Conv_ColorToText;
KismetTextLibrary.ToText = KismetTextLibrary.Conv_ColorToText;
KismetTextLibrary.prototype.ToText = KismetTextLibrary.prototype.Conv_ByteToText;
KismetTextLibrary.ToText = KismetTextLibrary.Conv_ByteToText;
KismetTextLibrary.prototype.ToText = KismetTextLibrary.prototype.Conv_BoolToText;
KismetTextLibrary.ToText = KismetTextLibrary.Conv_BoolToText;
KismetTextLibrary.prototype.AsTimespan = KismetTextLibrary.prototype.AsTimespan_Timespan;
KismetTextLibrary.AsTimespan = KismetTextLibrary.AsTimespan_Timespan;
KismetTextLibrary.prototype.AsTime = KismetTextLibrary.prototype.AsTime_DateTime;
KismetTextLibrary.AsTime = KismetTextLibrary.AsTime_DateTime;
KismetTextLibrary.prototype.AsPercent = KismetTextLibrary.prototype.AsPercent_Float;
KismetTextLibrary.AsPercent = KismetTextLibrary.AsPercent_Float;
KismetTextLibrary.prototype.AsDateTime = KismetTextLibrary.prototype.AsDateTime_DateTime;
KismetTextLibrary.AsDateTime = KismetTextLibrary.AsDateTime_DateTime;
KismetTextLibrary.prototype.AsDate = KismetTextLibrary.prototype.AsDate_DateTime;
KismetTextLibrary.AsDate = KismetTextLibrary.AsDate_DateTime;
KismetTextLibrary.prototype.AsCurrency = KismetTextLibrary.prototype.AsCurrencyBase;
KismetTextLibrary.AsCurrency = KismetTextLibrary.AsCurrencyBase;
KismetTextLibrary.prototype.AsCurrency = KismetTextLibrary.prototype.AsCurrency_Integer;
KismetTextLibrary.AsCurrency = KismetTextLibrary.AsCurrency_Integer;
KismetTextLibrary.prototype.AsCurrency = KismetTextLibrary.prototype.AsCurrency_Float;
KismetTextLibrary.AsCurrency = KismetTextLibrary.AsCurrency_Float;
VisualLoggerKismetLibrary.prototype.LogBoxShape = VisualLoggerKismetLibrary.prototype.LogBox;
VisualLoggerKismetLibrary.LogBoxShape = VisualLoggerKismetLibrary.LogBox;
Canvas.prototype.ClippedTextSize = Canvas.prototype.K2_TextSize;
Canvas.prototype.WrappedTextSize = Canvas.prototype.K2_StrLen;
Canvas.prototype.Project = Canvas.prototype.K2_Project;
Canvas.prototype.DrawTriangles = Canvas.prototype.K2_DrawTriangle;
Canvas.prototype.DrawTexture = Canvas.prototype.K2_DrawTexture;
Canvas.prototype.DrawText = Canvas.prototype.K2_DrawText;
Canvas.prototype.DrawPolygon = Canvas.prototype.K2_DrawPolygon;
Canvas.prototype.DrawMaterialTriangles = Canvas.prototype.K2_DrawMaterialTriangle;
Canvas.prototype.DrawMaterial = Canvas.prototype.K2_DrawMaterial;
Canvas.prototype.DrawLine = Canvas.prototype.K2_DrawLine;
Canvas.prototype.DrawBox = Canvas.prototype.K2_DrawBox;
Canvas.prototype.DrawBorder = Canvas.prototype.K2_DrawBorder;
Canvas.prototype.Deproject = Canvas.prototype.K2_Deproject;
CheatManager.prototype.InitCheatManager = CheatManager.prototype.ReceiveInitCheatManager;
GameUserSettings.prototype.SetResolutionScaleValue = GameUserSettings.prototype.SetResolutionScaleValueEx;
GameUserSettings.prototype.SetResolutionScaleValue_Deprecated = GameUserSettings.prototype.SetResolutionScaleValue;
GameUserSettings.prototype.GetResolutionScaleInformation = GameUserSettings.prototype.GetResolutionScaleInformationEx;
GameUserSettings.prototype.GetResolutionScaleInformation_Deprecated = GameUserSettings.prototype.GetResolutionScaleInformation;
MaterialInstanceDynamic.prototype.InterpolateMaterialInstanceParameters = MaterialInstanceDynamic.prototype.K2_InterpolateMaterialInstanceParams;
MaterialInstanceDynamic.prototype.GetVectorParameterValue = MaterialInstanceDynamic.prototype.K2_GetVectorParameterValue;
MaterialInstanceDynamic.prototype.GetTextureParameterValue = MaterialInstanceDynamic.prototype.K2_GetTextureParameterValue;
MaterialInstanceDynamic.prototype.GetScalarParameterValue = MaterialInstanceDynamic.prototype.K2_GetScalarParameterValue;
MaterialInstanceDynamic.prototype.CopyMaterialInstanceParameters = MaterialInstanceDynamic.prototype.K2_CopyMaterialInstanceParameters;
Texture2D.prototype.GetSizeY = Texture2D.prototype.Blueprint_GetSizeY;
Texture2D.prototype.GetSizeX = Texture2D.prototype.Blueprint_GetSizeX;
InAppPurchaseQueryCallbackProxy.prototype.ReadInAppPurchaseInformation = InAppPurchaseQueryCallbackProxy.prototype.CreateProxyObjectForInAppPurchaseQuery;
InAppPurchaseQueryCallbackProxy.ReadInAppPurchaseInformation = InAppPurchaseQueryCallbackProxy.CreateProxyObjectForInAppPurchaseQuery;
LeaderboardQueryCallbackProxy.prototype.ReadLeaderboardInteger = LeaderboardQueryCallbackProxy.prototype.CreateProxyObjectForIntQuery;
LeaderboardQueryCallbackProxy.ReadLeaderboardInteger = LeaderboardQueryCallbackProxy.CreateProxyObjectForIntQuery;
VREditorQuickMenu.prototype.Refresh = VREditorQuickMenu.prototype.RefreshUI;
Guid.prototype.ToString = Guid.prototype.Conv_GuidToString;
Guid.prototype.Equal = Guid.prototype.EqualEqual_GuidGuid;
Guid.prototype.IsValid = Guid.prototype.IsValid_Guid;
Guid.prototype.NotEqual = Guid.prototype.NotEqual_GuidGuid;
Vector.prototype.ToText = Vector.prototype.Conv_VectorToText;
Vector.prototype.ToString = Vector.prototype.Conv_VectorToString;
Vector.prototype.ToLinearColor = Vector.prototype.Conv_VectorToLinearColor;
Vector.prototype.RotationFromXVector = Vector.prototype.Conv_VectorToRotator;
Vector.prototype.ToTransform = Vector.prototype.Conv_VectorToTransform;
Vector.prototype.ToVector2D = Vector.prototype.Conv_VectorToVector2D;
Vector.prototype.CrossProduct = Vector.prototype.Cross_VectorVector;
Vector.prototype.DotProduct = Vector.prototype.Dot_VectorVector;
Vector.prototype.Equal = Vector.prototype.EqualEqual_VectorVector;
Vector.prototype.RotateVector = Vector.prototype.GreaterGreater_VectorRotator;
Vector.prototype.UnrotateVector = Vector.prototype.LessLess_VectorRotator;
Vector.prototype.LinePlaneIntersection = Vector.prototype.LinePlaneIntersection_OriginNormal;
Vector.prototype.Normalize = Vector.prototype.Normal;
Vector.prototype.NotEqual = Vector.prototype.NotEqual_VectorVector;
Vector.prototype.RotateVectorAroundAxis = Vector.prototype.RotateAngleAxis;
Vector.prototype.Ease = Vector.prototype.VEase;
Vector.prototype.Lerp = Vector.prototype.VLerp;
Vector.prototype.VectorLength = Vector.prototype.VSize;
Vector.prototype.VectorLengthSquared = Vector.prototype.VSizeSquared;
Vector2D.prototype.ToText = Vector2D.prototype.Conv_Vector2dToText;
Vector2D.prototype.ToString = Vector2D.prototype.Conv_Vector2dToString;
Vector2D.prototype.ToVector = Vector2D.prototype.Conv_Vector2DToVector;
Vector2D.prototype.CrossProduct = Vector2D.prototype.CrossProduct2D;
Vector2D.prototype.DotProduct = Vector2D.prototype.DotProduct2D;
Vector2D.prototype.Equal = Vector2D.prototype.EqualEqual_Vector2DVector2D;
Vector2D.prototype.Normalize2D = Vector2D.prototype.Normal2D;
Vector2D.prototype.NotEqual = Vector2D.prototype.NotEqual_Vector2DVector2D;
Vector2D.prototype.Vector2dLength = Vector2D.prototype.VSize2D;
Vector2D.prototype.Vector2dLengthSquared = Vector2D.prototype.VSize2DSquared;
Rotator.prototype.ToText = Rotator.prototype.Conv_RotatorToText;
Rotator.prototype.ToString = Rotator.prototype.Conv_RotatorToString;
Rotator.prototype.CombineRotators = Rotator.prototype.ComposeRotators;
Rotator.prototype.GetRotationXVector = Rotator.prototype.Conv_RotatorToVector;
Rotator.prototype.Equal = Rotator.prototype.EqualEqual_RotatorRotator;
Rotator.prototype.ScaleRotator = Rotator.prototype.Multiply_RotatorFloat;
Rotator.prototype.ScaleRotator = Rotator.prototype.Multiply_RotatorInt;
Rotator.prototype.InvertRotator = Rotator.prototype.NegateRotator;
Rotator.prototype.Delta = Rotator.prototype.NormalizedDeltaRotator;
Rotator.prototype.NotEqual = Rotator.prototype.NotEqual_RotatorRotator;
Rotator.prototype.Ease = Rotator.prototype.REase;
Rotator.prototype.Lerp = Rotator.prototype.RLerp;
Color.prototype.ToLinearColor = Color.prototype.Conv_ColorToLinearColor;
LinearColor.prototype.ToText = LinearColor.prototype.Conv_ColorToText;
LinearColor.prototype.ToString = LinearColor.prototype.Conv_ColorToString;
LinearColor.prototype.ToColor = LinearColor.prototype.Conv_LinearColorToColor;
LinearColor.prototype.ToVector = LinearColor.prototype.Conv_LinearColorToVector;
LinearColor.prototype.HSVtoRGB = LinearColor.prototype.HSVToRGB_Vector;
LinearColor.prototype.Lerp = LinearColor.prototype.LinearColorLerp;
LinearColor.prototype.LerpUsingHSV = LinearColor.prototype.LinearColorLerpUsingHSV;
LinearColor.prototype.RGBtoHSV = LinearColor.prototype.RGBToHSV_Vector;
Transform.prototype.ToText = Transform.prototype.Conv_TransformToText;
Transform.prototype.ToString = Transform.prototype.Conv_TransformToString;
Transform.prototype.EqualTransform = Transform.prototype.EqualEqual_TransformTransform;
Transform.prototype.NearlyEqual = Transform.prototype.NearlyEqual_TransformTransform;
Transform.prototype.Ease = Transform.prototype.TEase;
Transform.prototype.Lerp = Transform.prototype.TLerp;
DateTime.prototype.AsDate = DateTime.prototype.AsDate_DateTime;
DateTime.prototype.AsDateTime = DateTime.prototype.AsDateTime_DateTime;
DateTime.prototype.AsTime = DateTime.prototype.AsTime_DateTime;
DateTime.prototype.Equal = DateTime.prototype.EqualEqual_DateTimeDateTime;
DateTime.prototype.NotEqual = DateTime.prototype.NotEqual_DateTimeDateTime;
Timespan.prototype.AsTimespan = Timespan.prototype.AsTimespan_Timespan;
Timespan.prototype.Equal = Timespan.prototype.EqualEqual_TimespanTimespan;
Timespan.prototype.NotEqual = Timespan.prototype.NotEqual_TimespanTimespan;
Key.prototype.Equal = Key.prototype.EqualEqual_KeyKey;
TimerHandle.prototype.Invalidate = TimerHandle.prototype.K2_InvalidateTimerHandle;
TimerHandle.prototype.IsValid = TimerHandle.prototype.K2_IsValidTimerHandle;
InputEvent.prototype.IsAltDown = InputEvent.prototype.InputEvent_IsAltDown;
InputEvent.prototype.IsCommandDown = InputEvent.prototype.InputEvent_IsCommandDown;
InputEvent.prototype.IsControlDown = InputEvent.prototype.InputEvent_IsControlDown;
InputEvent.prototype.IsLeftAltDown = InputEvent.prototype.InputEvent_IsLeftAltDown;
InputEvent.prototype.IsLeftCommandDown = InputEvent.prototype.InputEvent_IsLeftCommandDown;
InputEvent.prototype.IsLeftControlDown = InputEvent.prototype.InputEvent_IsLeftControlDown;
InputEvent.prototype.IsLeftShiftDown = InputEvent.prototype.InputEvent_IsLeftShiftDown;
InputEvent.prototype.IsRepeat = InputEvent.prototype.InputEvent_IsRepeat;
InputEvent.prototype.IsRightAltDown = InputEvent.prototype.InputEvent_IsRightAltDown;
InputEvent.prototype.IsRightCommandDown = InputEvent.prototype.InputEvent_IsRightCommandDown;
InputEvent.prototype.IsRightControlDown = InputEvent.prototype.InputEvent_IsRightControlDown;
InputEvent.prototype.IsRightShiftDown = InputEvent.prototype.InputEvent_IsRightShiftDown;
InputEvent.prototype.IsShiftDown = InputEvent.prototype.InputEvent_IsShiftDown;
UPointerEvent.prototype.GetCursorDelta = UPointerEvent.prototype.PointerEvent_GetCursorDelta;
UPointerEvent.prototype.GetEffectingButton = UPointerEvent.prototype.PointerEvent_GetEffectingButton;
UPointerEvent.prototype.GetGestureDelta = UPointerEvent.prototype.PointerEvent_GetGestureDelta;
UPointerEvent.prototype.GetLastScreenSpacePosition = UPointerEvent.prototype.PointerEvent_GetLastScreenSpacePosition;
UPointerEvent.prototype.GetPointerIndex = UPointerEvent.prototype.PointerEvent_GetPointerIndex;
UPointerEvent.prototype.GetScreenSpacePosition = UPointerEvent.prototype.PointerEvent_GetScreenSpacePosition;
UPointerEvent.prototype.GetTouchpadIndex = UPointerEvent.prototype.PointerEvent_GetTouchpadIndex;
UPointerEvent.prototype.GetUserIndex = UPointerEvent.prototype.PointerEvent_GetUserIndex;
UPointerEvent.prototype.GetWheelDelta = UPointerEvent.prototype.PointerEvent_GetWheelDelta;
UPointerEvent.prototype.IsMouseButtonDown = UPointerEvent.prototype.PointerEvent_IsMouseButtonDown;
UPointerEvent.prototype.IsTouchEvent = UPointerEvent.prototype.PointerEvent_IsTouchEvent;
InputChord.prototype.Equal = InputChord.prototype.EqualEqual_InputChordInputChord;
ControllerEvent.prototype.GetEffectingButton = ControllerEvent.prototype.ControllerEvent_GetEffectingButton;
PaintContext.prototype.DrawString = PaintContext.prototype.DrawText;
PaintContext.prototype.DrawText = PaintContext.prototype.DrawTextFormatted;
